version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6378:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  mariadb:
    image: mariadb:11
    container_name: maridb_english
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=nam123
      - MARIADB_DATABASE=english_learning_platform
    ports:
      - "3307:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./schema:/docker-entrypoint-initdb.d:ro
  # kafka:
  #   image: confluentinc/cp-kafka:7.4.0
  #   hostname: kafka
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #     - "9101:9101"
  #   environment:
  #     # KRaft mode configuration
  #     CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
  #     KAFKA_NODE_ID: 1
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT

  #     # Cluster configuration
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  #     # JMX monitoring
  #     KAFKA_JMX_PORT: 9101
  #     KAFKA_JMX_HOSTNAME: localhost

  #     # Logging
  #     KAFKA_LOG_DIRS: /var/lib/kafka/data

  #     # Auto create topics
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui
  #   depends_on:
  #     - kafka
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092


volumes:
  redis_data:
  mariadb_data:
  # mongo-data: